apiVersion: v1
kind: Service
metadata:
  name: s3proxy
  labels:
    app: s3proxy
spec:
  ports:
  - port: 80
    name: s3
  clusterIP: None
  selector:
    app: s3proxy
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: s3proxy
spec:
  selector:
    matchLabels:
      app: s3proxy # has to match .spec.template.metadata.labels
  serviceName: "s3proxy"
  template:
    metadata:
      labels:
        app: s3proxy # has to match .spec.selector.matchLabels
    spec:
      containers:
      - name: s3proxy
        image: andrewgaul/s3proxy
        env:
          - name: S3PROXY_AUTHORIZATION
            value: none
        ports:
        - containerPort: 80
          name: s3
        volumeMounts:
        - name: s3local
          mountPath: /data
      volumes:
      - name: s3local
        persistentVolumeClaim:
          claimName: s3local
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: s3local
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi